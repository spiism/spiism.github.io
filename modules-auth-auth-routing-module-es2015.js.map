{"version":3,"sources":["./src/modules/auth/components/index.ts","./src/modules/auth/containers/login/login.component.ts","./src/modules/auth/containers/login/login.component.scss","./src/modules/auth/auth-routing.module.ts","./src/modules/auth/auth.module.ts","./src/modules/auth/guards/auth.guard.ts","./src/modules/auth/containers/index.ts","./src/modules/auth/containers/login/login.component.html","./src/modules/auth/guards/index.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-routing-module-es2015.js","sourcesContent":["export const components = [];\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '@modules/auth/services';\n\n@Component({\n    selector: 'sb-login',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './login.component.html',\n    styleUrls: ['login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n    loginForm = this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n\n    constructor(private fb: FormBuilder, private authService: AuthService) {}\n    ngOnInit() {}\n\n    onSubmit() {\n        if (this.loginForm.status === 'VALID') {\n            this.authService\n                .login$({\n                    password: this.loginForm.value.password,\n                })\n                .subscribe();\n        }\n\n        // tslint:disable-next-line: forin\n        for (const key in this.loginForm.controls) {\n            const control = this.loginForm.controls[key];\n            control.markAllAsTouched();\n        }\n    }\n\n    /* Accessor Methods */\n\n    get passwordControl() {\n        return this.loginForm.get('password') as FormControl;\n    }\n\n    get passwordControlValid() {\n        return this.passwordControl.touched && !this.passwordControlInvalid;\n    }\n\n    get passwordControlInvalid() {\n        return (\n            this.passwordControl.touched &&\n            (this.passwordControl.hasError('required') ||\n                this.passwordControl.hasError('minlength'))\n        );\n    }\n}\n","export default \"#inputPassword {\\n  flex: 0.9 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxnQkFBQTtBQURKIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc3R5bGVzL3ZhcmlhYmxlcy5zY3NzJztcblxuI2lucHV0UGFzc3dvcmQge1xuICAgIGZsZXg6IC45IDAgYXV0bztcbn0iXX0= */\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { AuthModule } from './auth.module';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: 'login',\n        canActivate: [],\n        component: authContainers.LoginComponent,\n        data: {\n            title: 'Pages Login - SB Clean Blog Angular',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as authComponents from './components';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\n\n/* Services */\nimport * as authServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [...authServices.services, ...authGuards.guards],\n    declarations: [...authContainers.containers, ...authComponents.components],\n    exports: [...authContainers.containers, ...authComponents.components],\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { LoginComponent } from './login/login.component';\n\nexport const containers = [LoginComponent];\n\nexport * from './login/login.component';\n","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <h5 class=\\\"text-white text-center mt-5\\\">Enter admin password</h5>\\n                <form class=\\\"form-inline justify-content-between\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <input class=\\\"form-control py-4 mr-2 my-2\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" /><button class=\\\"btn btn-primary\\\" data-cy=\\\"loginButton\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\n                </form>\\n                <h6 class=\\\"text-white-50\\\">Default: 123123123</h6>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","import { AuthGuard } from './auth.guard';\n\nexport const guards = [AuthGuard];\n\nexport * from './auth.guard';\n"],"sourceRoot":"webpack:///"}